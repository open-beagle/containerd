kind: pipeline
name: docker

trigger:
  branch:
    - release-v2.0

workspace:
  path: /go/src/github.com/containerd/containerd/v2

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: golang
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.23-alpine
    environment:
      VERSION: 2.0.3-beagle
    commands:
      - bash ./.beagle/build-cross.sh

  - name: golang-loong64
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.23-loongnix
    environment:
      VERSION: 2.0.3-beagle
    commands:
      - bash ./.beagle/build-loong64.sh

  - name: nerdctl-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/nerdctl:v2.0.3-amd64
    environment:
      TARGET_ARCH: amd64
    commands:
      - mkdir -p _output/linux/$TARGET_ARCH
      - cp /usr/local/bin/nerdctl _output/linux/$TARGET_ARCH/nerdctl

  - name: nerdctl-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/nerdctl:v2.0.3-arm64
    environment:
      TARGET_ARCH: arm64
    commands:
      - mkdir -p _output/linux/$TARGET_ARCH
      - cp /usr/local/bin/nerdctl _output/linux/$TARGET_ARCH/nerdctl

  - name: nerdctl-loong64
    image: registry.cn-qingdao.aliyuncs.com/wod/nerdctl:v2.0.3-loong64
    environment:
      TARGET_ARCH: loong64
    commands:
      - mkdir -p _output/linux/$TARGET_ARCH
      - cp /usr/local/bin/nerdctl _output/linux/$TARGET_ARCH/nerdctl

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/alpine:3-amd64
      cwd: _output
      repo: wod/containerd
      version: v2.0.3
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/alpine:3-arm64
      cwd: _output
      repo: wod/containerd
      version: v2.0.3
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-loong64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/alpine:3-amd64
      cwd: _output
      repo: wod/containerd
      version: v2.0.3
      channel: loong64
      args: "TARGETOS=linux,TARGETARCH=loong64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_ACCESS_KEY_ALIYUN
get:
  name: S3_ACCESS_KEY_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_SECRET_KEY_ALIYUN
get:
  name: S3_SECRET_KEY_ALIYUN
  path: devops-secrets